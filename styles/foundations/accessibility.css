/* This CSS code is defining the styles for the outline of a focused element. */
:focus {
	outline: 2px solid var(--color-brand);
}

:focus:not(:focus-visible) {
	outline: none;
}

/* These CSS selectors are defining the styles for the selected text in the browser. `::-moz-selection`
is targeting the selected text in Firefox, while `::selection` is targeting the selected text in
other browsers. Both selectors are setting the background color of the selected text to the value of
the `--color-brand-bg` variable and removing any text shadow. */
::-moz-selection {
	background: var(--color-brand-bg);
	text-shadow: none;
}

::selection {
	background: var(--color-brand-bg);
	text-shadow: none;
}

/* The `.sr-only` CSS class is used to visually hide an element on the page while still making it
accessible to screen readers. It achieves this by positioning the element absolutely and setting its
width and height to 1 pixel, with overflow set to hidden and white-space set to nowrap. The `clip`
and `clip-path` properties are used to further hide the element by clipping it to a 0x0 pixel
rectangle. This technique is commonly used to provide text alternatives for images or to hide
decorative elements that do not add any meaningful content to the page. */
.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	overflow: hidden;
	white-space: nowrap;
	clip: rect(0 0 0 0);
	clip-path: inset(50%);
}

/* The CSS selector `[hidden]` is targeting any element that has the `hidden` attribute set. The
`display: none !important;` rule is then applied to that element, which hides it from view on the
page. The `!important` keyword is used to ensure that this rule takes precedence over any other
conflicting CSS rules that may be applied to the element. */
[hidden] {
	display: none !important;
}
